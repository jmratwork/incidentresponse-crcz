---
- name: Ensure CICMS directories exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0750"
  loop:
    - /etc/nginx/sites-available
    - /etc/nginx/sites-enabled
    - /etc/nginx/tls
    - /etc/cicms

- name: Deploy CICMS nginx configuration
  ansible.builtin.template:
    src: nginx-cicms.conf.j2
    dest: /etc/nginx/sites-available/cicms.conf
    owner: root
    group: root
    mode: "0640"
  notify: reload cicms nginx

- name: Enable CICMS nginx site
  ansible.builtin.file:
    src: /etc/nginx/sites-available/cicms.conf
    dest: /etc/nginx/sites-enabled/cicms.conf
    state: link
  notify: reload cicms nginx

- name: Install CICMS TLS certificate
  ansible.builtin.copy:
    dest: "{{ cicms_tls.certificate_path }}"
    content: "{{ cicms_tls.certificate_content }}"
    owner: root
    group: root
    mode: "0640"
  when: cicms_tls.certificate_content | length > 0
  notify: reload cicms nginx

- name: Install CICMS TLS key
  ansible.builtin.copy:
    dest: "{{ cicms_tls.key_path }}"
    content: "{{ cicms_tls.key_content }}"
    owner: root
    group: root
    mode: "0600"
  when: cicms_tls.key_content | length > 0
  notify: reload cicms nginx
  no_log: true

- name: Render CICMS CMS settings
  ansible.builtin.template:
    src: settings.json.j2
    dest: "{{ cicms_cms_config_path }}"
    owner: root
    group: root
    mode: "0640"

- name: Validate CICMS nginx syntax
  ansible.builtin.command: nginx -t
  register: cicms_nginx_check
  changed_when: false
  failed_when: cicms_nginx_check.rc != 0

- name: Check CICMS health endpoint
  ansible.builtin.uri:
    url: "{{ cicms_healthcheck.url }}"
    method: GET
    status_code: {{ cicms_healthcheck.status_code | int }}
    validate_certs: {{ cicms_healthcheck.validate_certs | bool }}
  register: cicms_health
  failed_when: cicms_health.status != cicms_healthcheck.status_code
  changed_when: false
